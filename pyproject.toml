[tool.poetry]
name = "investos"
version = "0.5.5"
description = "Reliable backtesting and portfolio optimization for investors who want to focus on generating alpha"
authors = ["Charlie Reese", "ForecastOS"]
license = "Creative Commons Attribution-NonCommercial-ShareAlike (CC-BY-NC-SA)"
readme = "README.md"
packages = [{include = "investos"}]
homepage = "https://investos.io/"
repository = "https://github.com/forecastos/investos"
documentation = "https://investos.readthedocs.io/en/latest/"
keywords = ["investing", "alpha", "backtesting", "portfolio", "optimization", "forecastos"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: Other/Proprietary License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.8",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Testing",
]

[tool.poetry.dependencies]
python = "^3.9"
cvxpy = "^1.3.1"
requests = "^2.31.0"
numpy = "^1.24.3"
pandas = "^2.0.1"
forecastos = "^0.1.0"
statsmodels = "^0.14.2"
dask = "^2024.8.0"
dask-cloudprovider = "^2022.10.0"
aiobotocore = "^2.13.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"
pandas-market-calendars = "^4.1.4"
pytest = "^7.3.1"
ruff = "^0.3.0"
sphinx = "^7.0.0"
jupyterlab = "^3"
plotly = "^5.15.0"
pyarrow = "^12.0.1"
xgboost = "^1.7.6"
scikit-learn = "^1.3.0"
matplotlib = "^3.9.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
python_files = [
    "test_*.py",
]
norecursedirs = [
    "__pycache__",
    ".git",
    "docs",
    "examples",
]

[tool.ruff]
target-version = "py38"
extend-include = [
    "*.ipynb",
]
exclude = [
    "__pycache__",
    ".git/",
    ".pytest_cache/",
]

[tool.ruff.lint]
exclude = ["*.ipynb"]  # Only format Jupyter notebooks, for now
select = [
    "B",
    "E",
    "F",
    "I",
    "Q",
    "UP",
    "W",
]
ignore = [
    "B006",  # Mutable argument default
    "B008",  # Function call in default argument
    "E501",  # Line too long 
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    'F401',  # Unused import
    'F403',  # Wildcard import
]
